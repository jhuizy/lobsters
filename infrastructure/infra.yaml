Parameters:
  DockerImageTag:
    Description: ''
    NoEcho: false
    Type: String
  EcrRepo:
    Description: ''
    NoEcho: false
    Type: String
  GithubBranch:
    Description: ''
    NoEcho: false
    Type: String
  GithubOwner:
    Description: ''
    NoEcho: false
    Type: String
  GithubRepo:
    Description: ''
    NoEcho: false
    Type: String
  KeyName:
    Description: ''
    NoEcho: false
    Type: AWS::EC2::KeyPair::KeyName
Resources:
  Instance:
    Properties:
      IamInstanceProfile: !Ref 'InstanceProfile'
      ImageId: ami-52d4802e
      KeyName: !Ref 'KeyName'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "sudo apt-get update -y\n"
            - "sudo apt-get install -y docker docker.io awscli\n"
            - !Sub "sudo $(aws ecr get-login --region ${AWS::Region})\n"
            - "sudo curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname\
              \ -s`-`uname -m` -o /usr/local/bin/docker-compose\n"
            - "sudo chmod +x /usr/local/bin/docker-compose\n"
            - "mkdir /app && cd /app\n"
            - "sudo chown -R $(whoami) .\n"
            - !Sub "git clone https://github.com/${GithubOwner}/${GithubRepo} .\n"
            - !Sub "git checkout ${GithubBranch}\n"
            - 'cat docker-compose.yml | sed ''s/build: \./image: '
            - !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrRepo}:${DockerImageTag}'
            - "/g' > docker-compose-prod.yml\n"
            - "sudo service docker start\n"
            - "sudo docker-compose -f docker-compose-prod.yml up\n"
    Type: AWS::EC2::Instance
  InstanceProfile:
    Properties:
      InstanceProfileName: !Sub '${AWS::StackName}-instance-profile'
      Path: /managed/
      Roles:
        - !Ref 'InstanceRole'
    Type: AWS::IAM::InstanceProfile
  InstanceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      Path: /managed/
      RoleName: !Sub '${AWS::StackName}-instance-role'
    Type: AWS::IAM::Role
